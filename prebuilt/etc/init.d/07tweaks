#!/system/bin/sh
#Adrenaline Engine
#ThunderBolt
#Kick Ass Kernelizer
#Credits:
# pikachu01@xda
# zacharias.maladroit
# voku1987
# collin_ph@xda
# zeppelinrox
# ============================================================================================================================


# =====================
# I/O related tweaks 
# =====================

MMC=`ls -d /sys/block/mmc*`;


#I/O scheduler
for i in $MMC;
do
	echo "sio" > $i/queue/scheduler; 
done;

# Optimize non-rotating storage; 
for i in $MMC;
do
	#IMPORTANT!
	if [ -e $i/queue/rotational ]; 
	then
		echo 0 > $i/queue/rotational; 
	fi;
	if [ -e $i/queue/nr_requests ];
	then
		echo 8192 > $i/queue/nr_requests; # for starters: keep it sane
	fi;
	
	# deadline/VR/SIO scheduler specific
	if [ -e $i/queue/iosched/fifo_batch ];
	then
		echo 1 > $i/queue/iosched/fifo_batch;
	fi;
	if [ -e $i/queue/iosched/writes_starved ];
	then
		echo 1 > $i/queue/iosched/writes_starved;
	fi;
	
#disable iostats to reduce overhead  # idea by kodos96 - thanks !
	if [ -e $i/queue/iostats ];
	then
		echo "0" > $i/queue/iostats;
	fi;
# Optimize for read- & write-throughput; 
# Optimize for readahead; 
	if [ -e $i/queue/read_ahead_kb ];
	then
		echo "256" >  $i/queue/read_ahead_kb;
	fi;
	
done;



# ===================================================================================
# TWEAKS: raising read_ahead_kb cache-value for mounts that are sdcard-like to 2048
# ===================================================================================

if [ -e /sys/devices/virtual/bdi/179:0/read_ahead_kb ];
then
    echo "2048" > /sys/devices/virtual/bdi/179:0/read_ahead_kb;
fi;


if [ -e /sys/devices/virtual/bdi/179:32/read_ahead_kb ];
  then
    echo "256" > /sys/devices/virtual/bdi/179:32/read_ahead_kb;
fi;

if [ -e /sys/devices/virtual/bdi/default/read_ahead_kb ];
  then
    echo "256" > /sys/devices/virtual/bdi/default/read_ahead_kb;
fi;



# ========================================
# Mount related tweaks (Applied globally)
# ========================================

# Remount all partitions with noatime
for k in $(busybox mount | grep relatime | cut -d " " -f3);
do

busybox mount -o remount,noatime $k;
done;


# ==============================================================
# VFS, VM settings
# ==============================================================

echo 3 > /proc/sys/vm/page-cluster;
echo 3000 > /proc/sys/vm/dirty_expire_centisecs;
echo 500 > /proc/sys/vm/dirty_writeback_centisecs;
echo "5120" > /proc/sys/vm/min_free_kbytes;
echo "0" > /proc/sys/vm/oom_kill_allocating_task;
echo "0" > /proc/sys/vm/panic_on_oom;
echo "10" > /proc/sys/vm/dirty_background_ratio;
echo "40" > /proc/sys/vm/dirty_ratio;
echo "10" > /proc/sys/vm/vfs_cache_pressure;
echo "1" > /proc/sys/vm/overcommit_memory;
echo "4" > /proc/sys/vm/min_free_order_shift;
echo "0" > /proc/sys/vm/laptop_mode;
echo "0" > /proc/sys/vm/block_dump;
echo "1" > /proc/sys/vm/oom_dump_tasks;



# =================================================================================================
# Renice System at Wake. Credits to lpy: http://forum.xda-developers.com/showthread.php?t=1137554
# =================================================================================================

renice -1 `pidof android.process.acore`;
  


# ==================================================================
# network speed and throughput | network security related settings
# ==================================================================

echo "0" > /proc/sys/net/ipv4/tcp_timestamps;
echo "1" > /proc/sys/net/ipv4/tcp_tw_reuse;
echo "1" > /proc/sys/net/ipv4/tcp_sack;
echo "1" > /proc/sys/net/ipv4/tcp_dsack;
echo "1" > /proc/sys/net/ipv4/tcp_tw_recycle;
echo "1" > /proc/sys/net/ipv4/tcp_window_scaling;
echo "5" > /proc/sys/net/ipv4/tcp_keepalive_probes;
echo "30" > /proc/sys/net/ipv4/tcp_keepalive_intvl;
echo "30" > /proc/sys/net/ipv4/tcp_fin_timeout;
echo "1" > /proc/sys/net/ipv4/tcp_moderate_rcvbuf;
echo "1" > /proc/sys/net/ipv4/route/flush;
echo "6144" > /proc/sys/net/ipv4/udp_rmem_min;
echo "6144" > /proc/sys/net/ipv4/udp_wmem_min;
echo "1" > /proc/sys/net/ipv4/tcp_rfc1337;
echo "0" > /proc/sys/net/ipv4/ip_no_pmtu_disc;
echo "0" > /proc/sys/net/ipv4/tcp_ecn;
echo "6144 87380 2097152" > /proc/sys/net/ipv4/tcp_wmem;
echo "6144 87380 2097152" > /proc/sys/net/ipv4/tcp_rmem;
echo "1" > /proc/sys/net/ipv4/tcp_fack;
echo "2" > /proc/sys/net/ipv4/tcp_synack_retries;
echo "2" > /proc/sys/net/ipv4/tcp_syn_retries;
echo "1" > /proc/sys/net/ipv4/tcp_no_metrics_save;
echo "1800" > /proc/sys/net/ipv4/tcp_keepalive_time;
echo "0" > /proc/sys/net/ipv4/ip_forward;
echo "0" > /proc/sys/net/ipv4/conf/default/accept_source_route;
echo "0" > /proc/sys/net/ipv4/conf/all/accept_source_route;
echo "0" > /proc/sys/net/ipv4/conf/all/accept_redirects;
echo "0" > /proc/sys/net/ipv4/conf/default/accept_redirects;
echo "0" > /proc/sys/net/ipv4/conf/all/secure_redirects;
echo "0" > /proc/sys/net/ipv4/conf/default/secure_redirects;
echo "0" > /proc/sys/net/ipv4/ip_dynaddr;
echo "1440000" > /proc/sys/net/ipv4/tcp_max_tw_buckets;
echo "57344 57344 524288" > /proc/sys/net/ipv4/tcp_mem;
echo "1440000" > /proc/sys/net/ipv4/tcp_max_tw_buckets;
echo "2097152" > /proc/sys/net/core/rmem_max;
echo "2097152" > /proc/sys/net/core/wmem_max;
echo "262144" > /proc/sys/net/core/rmem_default;
echo "262144" > /proc/sys/net/core/wmem_default;
echo "20480" > /proc/sys/net/core/optmem_max;
echo "2500" > /proc/sys/net/core/netdev_max_backlog;
echo "50" > /proc/sys/net/unix/max_dgram_qlen;



# ===================
# Kernel | FS Tweaks
# ===================

echo "500 512000 64 2048" > /proc/sys/kernel/sem;
echo "268435456" > /proc/sys/kernel/shmmax;
echo "2097152" > /proc/sys/kernel/shmall;
echo "4096" > /proc/sys/kernel/shmmni;
echo "2048" > /proc/sys/kernel/msgmni;
echo "64000" > /proc/sys/kernel/msgmax;
echo "30" > /proc/sys/kernel/panic;
echo "0" > /proc/sys/kernel/panic_on_oops;
echo "5000" > /proc/sys/kernel/threads-max;
echo "10" > /proc/sys/fs/lease-break-time;
echo "65536" > /proc/sys/fs/file-max;



# ==============================================================
# Governor Tweaks
# ==============================================================

echo "smartassV2" > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor;
echo "245760" > /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq;
echo "1400000" > /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq;

# ==========
# Ondemand
# ==========
	if [ -e /sys/devices/system/cpu/cpu0/cpufreq/ondemand/up_threshold ]; then
		echo "85" > /sys/devices/system/cpu/cpu0/cpufreq/ondemand/up_threshold;
	fi;
	
	if [ -e /sys/devices/system/cpu/cpu1/cpufreq/ondemand/up_threshold ]; then
		echo "85" > /sys/devices/system/cpu/cpu1/cpufreq/ondemand/up_threshold;
	fi;
	
	if [ -e /sys/devices/system/cpu/cpufreq/ondemand/up_threshold ]; then
		echo "85" > /sys/devices/system/cpu/cpufreq/ondemand/up_threshold;
	fi;
	
	
# =============
# Conservative 
# =============

	if [ -e /sys/devices/system/cpu/cpu0/cpufreq/conservative/up_threshold ]; then
		echo "85" > /sys/devices/system/cpu/cpu0/cpufreq/conservative/up_threshold;
		echo "75" > /sys/devices/system/cpu/cpu0/cpufreq/conservative/down_threshold;
        echo "100" > /sys/devices/system/cpu/cpu0/cpufreq/conservative/freq_step;
	fi;	
	
	if [ -e /sys/devices/system/cpu/cpu1/cpufreq/conservative/up_threshold ]; then
		echo "85" > /sys/devices/system/cpu/cpu1/cpufreq/conservative/up_threshold;
		echo "75" > /sys/devices/system/cpu/cpu1/cpufreq/conservative/down_threshold;
        echo "100" > /sys/devices/system/cpu/cpu1/cpufreq/conservative/freq_step;
	fi;
	
	if [ -e /sys/devices/system/cpu/cpufreq/conservative/up_threshold ]; then
		echo "85" > /sys/devices/system/cpu/cpufreq/conservative/up_threshold;
		echo "75" > /sys/devices/system/cpu/cpufreq/conservative/down_threshold;
        echo "100" > /sys/devices/system/cpu/cpufreq/conservative/freq_step;
	fi;


# ============
# smartassV2 
# ============

	if [ -e /sys/devices/system/cpu/cpufreq/smartass/awake_ideal_freq ]; then

		echo "800000" > /sys/devices/system/cpu/cpufreq/smartass/awake_ideal_freq;
		if [ "`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq`" -eq 200000 ]; then
			echo "200000" > /sys/devices/system/cpu/cpufreq/smartass/sleep_ideal_freq;
		else 
			echo "100000" > /sys/devices/system/cpu/cpufreq/smartass/sleep_ideal_freq;
		fi;
		
		echo "800000" > /sys/devices/system/cpu/cpufreq/smartass/sleep_wakeup_freq;
		echo "85" > /sys/devices/system/cpu/cpufreq/smartass/max_cpu_load;
		echo "75" > /sys/devices/system/cpu/cpufreq/smartass/min_cpu_load;
		echo "200000" > /sys/devices/system/cpu/cpufreq/smartass/ramp_down_step;
		echo "0" > /sys/devices/system/cpu/cpufreq/smartass/ramp_up_step;
	fi;